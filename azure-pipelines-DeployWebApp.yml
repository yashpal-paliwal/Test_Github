# Python to Linux Web App on Azure
# Build your Python project and deploy it to Azure as a Linux Web App.
trigger:
- main

variables:
  azureServiceConnectionId: '44a4927d-eccc-4df7-a606-85bc1c507022'
  webAppName: 'yash-omptoolbox'
  vmImageName: 'ubuntu-latest'
  environmentName: 'yash-omptoolbox'
  projectRoot: $(System.DefaultWorkingDirectory)

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: BuildJob
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '3.x'
        addToPath: true
      displayName: 'Use Python 3.x'
    
    - script: |
        python -m venv antenv
        source antenv/bin/activate
        python -m pip install --upgrade pip
        pip install pandas requests openpyxl
        pip install setup
        pip install -r requirements.txt
      workingDirectory: $(projectRoot)
      displayName: "Install requirements"

    - task: ArchiveFiles@2
      displayName: 'Archive files'
      inputs:
        rootFolderOrFile: '$(projectRoot)'
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
        replaceExistingArchive: true

    - task: PublishBuildArtifacts@1
      displayName: 'Upload package'
      inputs:
        pathtoPublish: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
        artifactName: 'drop'
        publishLocation: 'Container'

- stage: Deploy
  displayName: 'Deploy Web App'
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: DeploymentJob
    pool:
      vmImage: $(vmImageName)
    environment: $(environmentName)
    strategy:
      runOnce:
        deploy:
          steps:
          - task: UsePythonVersion@0
            inputs:
              versionSpec: '3.x'
              addToPath: true
            displayName: 'Use Python 3.x'

          - task: AzureWebApp@1
            displayName: 'Deploy Azure Web App : yash-omptoolbox'
            inputs:
              azureSubscription: $(azureServiceConnectionId)
              appName: $(webAppName)
              appType: 'webApp'  # or 'webAppContainer' if your app is a Docker container
              package: $(Pipeline.Workspace)/drop/$(Build.BuildId).zip
